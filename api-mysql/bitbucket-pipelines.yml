image: node:18.13.0
definitions:
  steps:
    - step: &sast
        name: SAST
        script:
          - yarn install
          - yarn outdated || exit 0
          - yarn
          - yarn run lint
          - yarn test --ci --all --verbose --reporters=default --reporters=jest-junit --maxWorkers=20%
        caches:
          - node

    - step: &deploy
        name: Build to AWS ECR and Deploy to EC2
        services:
          - docker
        script:
          - docker build -t api .
          - pipe: atlassian/aws-ecr-push-image:2.2.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              IMAGE_NAME: api
              TAGS: $DEPLOY_TAG
          - pipe: atlassian/ssh-run:0.7.1
            variables:
              SSH_USER: 'ec2-user'
              SERVER: $EC2_SERVER
              COMMAND: 'aws ecr get-login-password --region ap-southeast-2 --profile devops | docker login --username AWS --password-stdin $ECR_REPO && docker-compose pull && docker-compose up -d && docker system prune -f'
        caches:
          - docker

    - step: &seed
        name: Seed UAT demo data
        clone:
          enabled: false
        script:
          - pipe: atlassian/ssh-run:0.7.1
            variables:
              SSH_USER: 'ec2-user'
              SERVER: ec2-52-64-60-1.ap-southeast-2.compute.amazonaws.com
              COMMAND: 'docker-compose exec api yarn seed-demo'

pipelines:
  default:
    - step: *sast

  branches:
    main:
      - step: *sast
      - step:
          <<: *deploy
          deployment: Staging

    production:
      - step: *sast
      - step:
          <<: *deploy
          deployment: Production

  custom:
    seed:
      - step: *seed
